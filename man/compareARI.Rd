% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compareARI.R
\name{compareARI}
\alias{compareARI}
\title{Pairwise comparisons of ARI values among a set of clustering partitions}
\usage{
compareARI(x, K = NULL, parallel = FALSE, BPPARAM = bpparam(),
  plot = TRUE, ...)
}
\arguments{
\item{x}{Object of class \code{coseq}, \code{NormMixClus}, or 
\code{PoisMixClusWrapper} (object defined in the HTSCluster package that
is indirectly called by \code{coseq} for Poisson mixture models),
or alternatively a \emph{n} x \emph{M} \code{data.frame} or \code{matrix} 
containing the clustering partitions for \emph{M} different models}

\item{K}{If \code{NULL}, pairwise ARI values will be calculated among every model in
object \code{x}. Otherwise, \code{K} provides a vector of cluster numbers identifying
a subset of models in \code{x}.}

\item{parallel}{If \code{FALSE}, no parallelization. If \code{TRUE}, parallel 
execution using BiocParallel (see next argument \code{BPPARAM}). 
Note that parallelization is unlikely to be helpful unless the number of 
observations \emph{n} in the clustering partitions or the number of 
models \emph{M} are very large.}

\item{BPPARAM}{Optional parameter object passed internally to \code{bplapply} 
when \code{parallel=TRUE}. If not specified, the parameters last registered 
with \code{register} will be used.}

\item{plot}{If \code{TRUE}, provide a heatmap using corrplot to visualize 
the calculated pairwise ARI values.}

\item{...}{Additional optional parameters for corrplot}
}
\value{
Matrix of adjusted rand index values calculated between each pair 
of models.
}
\description{
Provides the adjusted rand index (ARI) between pairs of clustering paritions.
}
\examples{
## Simulate toy data, n = 300 observations
set.seed(12345)
countmat <- matrix(runif(300*4, min=0, max=500), nrow=300, ncol=4)
countmat <- countmat[which(rowSums(countmat) > 0),]
conds <- rep(c("A","B","C","D"), each=2)

## Run the Normal mixture model for K = 2,3,4
run_arcsin <- coseq(y=countmat, K=2:4, iter=5, transformation="arcsin")

## Plot and summarize results
plot(run_arcsin)
summary(run_arcsin)

## Compare ARI values for all models (no plot generated here)
ARI <- compareARI(run_arcsin, plot=FALSE)

## Compare ICL values for models with arcsin and logit transformations
run_logit <- coseq(y=countmat, K=2:4, iter=5, transformation="logit")
compareICL(list(run_arcsin, run_logit))

}
\author{
Andrea Rau
}

